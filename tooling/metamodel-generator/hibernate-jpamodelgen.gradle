/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */
description = 'Annotation Processor to generate JPA 2 static metamodel classes'

apply from: rootProject.file( 'gradle/published-java-module.gradle' )
apply plugin: 'version-injection'

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

//configurations {
//    modelImplementation {
//        extendsFrom implementation
//    }
//    modelAnnotationProcessor {
//        extendsFrom annotationProcessor
//    }
//    testImplementation {
//        extendsFrom modelImplementation
//    }
//}

dependencies {
    implementation project( ':hibernate-core' )
    implementation jakartaLibs.jaxbApi
    implementation jakartaLibs.jaxb
    implementation libs.antlrRuntime
    implementation libs.byteBuddy

//    modelImplementation project( ':hibernate-core' )
//    modelAnnotationProcessor project( ":hibernate-jpamodelgen" )

    testImplementation project( ':hibernate-core' )
    testImplementation jakartaLibs.validation
    testImplementation jakartaLibs.annotation
}

//sourceSets {
//    model {
//        compileClasspath += sourceSets.main.output
//        runtimeClasspath += sourceSets.main.output
//        // no need to specify java or resource dir names as we follow naming conventions
//        java {
//        }
//        resources {
//        }
//    }
//    test {
//        compileClasspath += sourceSets.model.output
//        runtimeClasspath += sourceSets.model.output
//    }
//}

//compileTestJava {
//    options.compilerArgs += [ "-proc:none" ]
//}


//// Tests with records
//if ( jdkVersions.test.release.asInt() >= 17 && jdkVersions.explicit ) {
//    // We need to configure the source and target version to 17
//    //compileTestJava17Java {
//    compileTestJava {
//        javaCompiler = javaToolchains.compilerFor {
//            languageVersion = jdkVersions.test.compile
//        }
//        sourceCompatibility = 17
//        targetCompatibility = 17
//    }
//
//    test {
//        javaLauncher = javaToolchains.launcherFor {
//            languageVersion = jdkVersions.test.launcher
//        }
//
//        if ( jdkVersions.test.launcher.asInt() >= 19 ) {
//            logger.warn( "The version of Java bytecode that will be tested is not supported by Bytebuddy by default. " +
//                                 " Setting 'net.bytebuddy.experimental=true'." )
//            systemProperty 'net.bytebuddy.experimental', true
//        }
//    }
//} else {
//    sourceSets {
//        test {
//            java {
//                exclude '**/records/*.java'
//            }
//        }
//    }
//}

tasks.sourcesJar.dependsOn ':hibernate-core:generateHqlParser'
tasks.sourcesJar.dependsOn ':hibernate-core:generateSqlScriptParser'


